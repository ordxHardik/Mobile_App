{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jainh\\\\Downloads\\\\react-ecommerce-frontend-master\\\\react-ecommerce-frontend-master\\\\src\\\\context.js\";\nimport React, { Component } from 'react';\nimport { storeProducts, detailProduct } from './data';\n//1.47\n\nconst ProductContext = /*#__PURE__*/React.createContext();\n//Provider\n//Consumer\n//bireysel not:\n//productcontext.provider icinde kullanmak icin yedek\n//                products: this.state.products,\n//                detailProduct: this.state.detailProduct\n/*\none of point of views:\n            <ProductContext.Provider value = {{\n                    ...this.state,\n                    handleDetail: this.handleDetail,\n                    addToCart: this.addToCart,\n            }}>\n                {this.props.children}\n            </ProductContext.Provider>\n*/\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProduct: detailProduct,\n      cart: [],\n      modalOpen: false,\n      modalProduct: detailProduct,\n      cartSubTotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n      //5.10\n      //for working on cart page we need to not leave the cart array as empty.\n      //cart: [],    so it is gonna be like below for temporarily.\n    };\n    this.setProducts = () => {\n      let tempProducts = [];\n      storeProducts.forEach(item => {\n        const singleItem = {\n          ...item\n        };\n        tempProducts = [...tempProducts, singleItem];\n      });\n      this.setState(() => {\n        return {\n          products: tempProducts\n        };\n      });\n    };\n    this.getItem = id => {\n      //3.17.35  item is symbolic and native \n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n    this.handleDetail = id => {\n      //3.23... solution for typeError i which caused because of not giving id parameter to getItem() method.\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n    this.addToCart = id => {\n      //Before everything, to check the method's way logically\n      // console.log(`hello from add to cart id is ${id}`); \n\n      //I dont wanna to manupulate the state directly out of the setState method\n      let tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(this.getItem(id));\n      const product = tempProducts[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n      this.setState(() => {\n        return {\n          products: tempProducts,\n          cart: [...this.state.cart, product]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n    this.openModal = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n    this.closeModal = () => {\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n    this.increment = id => {\n      //Always start basic to a component that  makes sure it  being displayed in the screen primarily. \n      //console.log('this is increment method');\n\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count = product.count + 1;\n      product.total = product.count * product.price;\n      this.setState(() => {\n        return {\n          cart: [...tempCart]\n        };\n        //5.34\n      }, () => {\n        this.addTotals();\n      });\n    };\n    this.decrement = id => {\n      //Always start basic to a component that  makes sure it  being displayed in the screen primarily. \n      //console.log('this is decrement method');\n\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count = product.count - 1;\n      if (product.count === 0) {\n        this.removeItem(id);\n      } else {\n        product.total = product.count * product.price;\n        this.setState(() => {\n          return {\n            cart: [...tempCart]\n          };\n        }, () => {\n          this.addTotals();\n          //5.41\n        });\n      }\n    };\n    this.removeItem = id => {\n      //5.28 highly important piece below\n      let tempProducts = [...this.state.products];\n      let tempCart = [...this.state.cart];\n      tempCart = tempCart.filter(item => item.id !== id);\n      const index = tempProducts.indexOf(this.getItem(id));\n      let removedProduct = tempProducts[index];\n      removedProduct.inCart = false;\n      removedProduct.count = 0;\n      removedProduct.total = 0;\n      this.setState(() => {\n        return {\n          cart: [...tempCart],\n          products: [...tempProducts]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n    this.clearCart = () => {\n      //console.log('cart was cleared');\n\n      this.setState(() => {\n        //just like down it is really simple\n        return {\n          cart: []\n        };\n      }, () => {\n        this.setProducts();\n        this.addTotals();\n      });\n    };\n    this.addTotals = () => {\n      let subTotal = 0;\n      this.state.cart.map(item => subTotal += item.total);\n      //5.12 item => (subTotal += itemTotal) or down syntax chose and care\n      //5.12 item => {subTotal += itemTotal} \n      const tempTax = subTotal * 0.1;\n      // tempTax = subTotal * TaxRate;\n      const tax = parseFloat(tempTax.toFixed(2));\n      //toFixed means how many decimals should be shown\n      //The parseFloat() function parses a string and returns a floating point number.\n      const total = subTotal + tax;\n      this.setState(() => {\n        return {\n          cartSubTotal: subTotal,\n          cartTax: tax,\n          cartTotal: total\n        };\n      });\n    };\n  }\n  componentDidMount() {\n    this.setProducts();\n  }\n  /*TEST\n  //To test \n  tester= () => {\n     console.log('Store products :', storeProducts[0].inCart);\n      const tempProducts = [...this.state.products];\n     tempProducts[0].inCart = true;\n     this.setState(() => {\n         return {product: tempProducts},\n         () => {\n             console.log('State products :', this.state.product[0].inCart);\n             console.log('Store products :', storeProducts[0].inCart);\n         }\n         \n     });\n  \n  }\n  */\n\n  render() {\n    return /*#__PURE__*/React.createElement(ProductContext.Provider, {\n      value: {\n        ...this.state,\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        openModal: this.openModal,\n        closeModal: this.closeModal,\n        increment: this.increment,\n        decrement: this.decrement,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n}\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"names":["React","Component","storeProducts","detailProduct","ProductContext","createContext","ProductProvider","constructor","args","state","products","cart","modalOpen","modalProduct","cartSubTotal","cartTax","cartTotal","setProducts","tempProducts","forEach","item","singleItem","setState","getItem","id","product","find","handleDetail","addToCart","index","indexOf","inCart","count","price","total","addTotals","openModal","closeModal","increment","tempCart","selectedProduct","decrement","removeItem","filter","removedProduct","clearCart","subTotal","map","tempTax","tax","parseFloat","toFixed","componentDidMount","render","createElement","Provider","value","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","props","children","ProductConsumer","Consumer"],"sources":["C:/Users/jainh/Downloads/react-ecommerce-frontend-master/react-ecommerce-frontend-master/src/context.js"],"sourcesContent":["import React, { Component } from 'react';\nimport {storeProducts, detailProduct} from './data';\n//1.47\n\nconst ProductContext = React.createContext();\n//Provider\n//Consumer\n//bireysel not:\n//productcontext.provider icinde kullanmak icin yedek\n//                products: this.state.products,\n//                detailProduct: this.state.detailProduct\n/*\none of point of views:\n            <ProductContext.Provider value = {{\n                    ...this.state,\n                    handleDetail: this.handleDetail,\n                    addToCart: this.addToCart,\n            }}>\n                {this.props.children}\n            </ProductContext.Provider>\n*/\n\n\nclass ProductProvider extends Component {\n   state = {\n    products: [],\n    detailProduct: detailProduct,\n    cart: [],\n    modalOpen: false,\n    modalProduct: detailProduct,\n    cartSubTotal: 0,\n    cartTax: 0,\n    cartTotal: 0,\n    //5.10\n    //for working on cart page we need to not leave the cart array as empty.\n    //cart: [],    so it is gonna be like below for temporarily.\n\n   };\n   componentDidMount(){\n    this.setProducts();\n\n\n   }\n   setProducts = () => {\n       let tempProducts = [];\n       storeProducts.forEach(item => {\n           const singleItem = {...item} ;\n           tempProducts = [...tempProducts, singleItem];\n\n\n       });\n    this.setState(()=>{\n        return {products: tempProducts}\n    });\n   }\n\n   getItem = (id) =>{\n       //3.17.35  item is symbolic and native \n       const product = this.state.products.find(item => item.id === id);\n       return product;\n\n   }\n\n   handleDetail = (id) => { \n       //3.23... solution for typeError i which caused because of not giving id parameter to getItem() method.\n       const product = this.getItem(id);\n       this.setState(\n           ()=>{\n               return {detailProduct: product}\n           }\n       );\n    }\n   addToCart = (id) => {\n       //Before everything, to check the method's way logically\n       // console.log(`hello from add to cart id is ${id}`); \n\n    //I dont wanna to manupulate the state directly out of the setState method\n       let tempProducts = [...this.state.products];\n       const index = tempProducts.indexOf(this.getItem(id));\n       const product = tempProducts[index];\n       product.inCart = true;\n       product.count = 1;\n       const price = product.price;\n       product.total = price;\n       this.setState(() => {\n           return {products: tempProducts, cart: [...this.state.cart, product] }\n       },()=>{\n           this.addTotals()\n\n       });\n\n    }\n    openModal = id =>{\n        const product = this.getItem(id);\n        this.setState(()=>{\n            return {\n                modalProduct: product,\n                modalOpen: true,\n\n            }\n        });\n    }\n    closeModal = () => {\n        this.setState(()=>{\n            return {modalOpen: false}\n        });\n    }\n    increment = (id) => {\n        //Always start basic to a component that  makes sure it  being displayed in the screen primarily. \n        //console.log('this is increment method');\n\n        let tempCart = [...this.state.cart];\n        const selectedProduct =  tempCart.find(item => item.id === id);\n        const index= tempCart.indexOf(selectedProduct);\n        const product = tempCart[index];\n\n        product.count = product.count + 1;\n        product.total = product.count * product.price;\n\n        this.setState(()=>{\n            return {cart: [...tempCart]}\n            //5.34\n        }, ()=>{\n            this.addTotals();\n        });\n    }\n    decrement = (id) => {\n        //Always start basic to a component that  makes sure it  being displayed in the screen primarily. \n        //console.log('this is decrement method');\n\n        let tempCart = [...this.state.cart];\n        const selectedProduct = tempCart.find(item => item.id === id);\n        const index = tempCart.indexOf(selectedProduct);\n        const product = tempCart[index];\n\n        product.count = product.count - 1;\n\n        if(product.count === 0){\n            this.removeItem(id)\n        }else{\n            product.total = product.count * product.price;\n\n            this.setState(()=>{\n                return {cart: [...tempCart]};\n            },()=>{\n                this.addTotals();\n                //5.41\n            }\n            );\n        }\n    }\n    removeItem = (id) => {\n        //5.28 highly important piece below\n        let tempProducts = [...this.state.products];\n        let tempCart = [...this.state.cart];\n        tempCart = tempCart.filter(item => item.id !== id);\n        const index = tempProducts.indexOf(this.getItem(id));\n        let removedProduct = tempProducts[index];\n        removedProduct.inCart = false;\n        removedProduct.count = 0;\n        removedProduct.total = 0;\n\n\n        this.setState(()=>{\n            return {\n                cart: [...tempCart],\n                products: [...tempProducts]\n            }\n        }, ()=>{\n            this.addTotals();\n        });\n    }\n    clearCart = () => {\n        //console.log('cart was cleared');\n\n        this.setState(()=>{\n            //just like down it is really simple\n            return {cart: []}\n        },()=>{\n            this.setProducts();\n            this.addTotals();\n\n        }\n        );\n    }\n    addTotals =()=>{\n        let subTotal = 0;\n        this.state.cart.map(item => (subTotal += item.total));\n        //5.12 item => (subTotal += itemTotal) or down syntax chose and care\n        //5.12 item => {subTotal += itemTotal} \n        const tempTax = subTotal * 0.1;\n        // tempTax = subTotal * TaxRate;\n        const tax = parseFloat(tempTax.toFixed(2));\n        //toFixed means how many decimals should be shown\n        //The parseFloat() function parses a string and returns a floating point number.\n        const total = subTotal + tax;\n        this.setState(()=>{\n            return ({\n                cartSubTotal: subTotal,\n                cartTax: tax,\n                cartTotal: total,\n\n\n            });\n        });\n\n\n    }\n\n\n /*TEST\n //To test \ntester= () => {\n    console.log('Store products :', storeProducts[0].inCart);\n\n    const tempProducts = [...this.state.products];\n    tempProducts[0].inCart = true;\n    this.setState(() => {\n        return {product: tempProducts},\n        () => {\n            console.log('State products :', this.state.product[0].inCart);\n            console.log('Store products :', storeProducts[0].inCart);\n        }\n        \n    });\n\n\n}\n*/ \n\n    render() {\n        return (\n            <ProductContext.Provider value = {{\n                    ...this.state,\n                    handleDetail: this.handleDetail,\n                    addToCart: this.addToCart,\n                    openModal: this.openModal,\n                    closeModal: this.closeModal,\n                    increment: this.increment,\n                    decrement: this.decrement,\n                    removeItem: this.removeItem,\n                    clearCart: this.clearCart\n\n            }}>\n            \n          {/*}  <button onClick = {this.tester}> Test Me!\n            {//2.40.00 da kaldı\n            }\n            </button>\n        */}\n                {this.props.children}\n            </ProductContext.Provider>\n        );\n    }\n}\nconst ProductConsumer = ProductContext.Consumer;\n\nexport {ProductProvider, ProductConsumer};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}